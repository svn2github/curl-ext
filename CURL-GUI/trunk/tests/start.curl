{curl 7.0 applet}
{applet manifest = "manifest.mcurl",
    {compiler-directives careful? = true}
}
{import * from COM.CURL.EXT.STANDARD}
{import * from COM.CURL.EXT.TEST-SUPPORT}

|| ==============================
{document-style PlainDocument}
{set-document-properties hstretch? = true, vstretch? = true}
{install-style-sheet
    {StyleSheet
        {get-default-style-sheet},
        {StyleSheet
            {StyleRule "ArbitraryContent",
                background = "#C84"}}
    }}

{value
    {title PaneContainer experiments}
    def layout-specs =
        {StringArray
            || --------------------
            "none", "",
            || --------------------
            "bogus", "foo",
            || --------------------
            "single",
            {stringify
                {pane-container
                    {tiled-pane-group
                        max-rows = 1,                    
                        {single-pane pane-name = "pane1"}}
                }},
            || NOTE: single-pane must be inside a group
||--            {stringify
||--                {pane-container                    
||--                    {single-pane pane-name = "pane1"}
||--                }},
            || --------------------
            "tiled horizontal",
            {stringify
                {pane-container
                    {tiled-pane-group
                        max-rows = 1,
                        {single-pane pane-name = "pane1"},
                        {single-pane pane-name = "pane2"},
                        {single-pane pane-name = "pane3"}
                    }
                }},
            || --------------------
            "tiled vertical",
            {stringify
                {pane-container
                    {tiled-pane-group
                        max-cols = 1,
                        {single-pane pane-name = "pane1"},
                        {single-pane pane-name = "pane2"},
                        {single-pane pane-name = "pane3"}
                    }
                }},
            || --------------------
            "tiled vertical after drag-right",
            {stringify
                {pane-container
                    {tiled-pane-group
                        max-cols = 1,
                        {tiled-pane-group
                            max-rows = 1,
                            {single-pane pane-name = "pane1"},
                            {single-pane pane-name = "pane2"}},
                        {single-pane pane-name = "pane3"}
                    }
                }},
            || --------------------
            "tiled vertical after drag-tab",
            {stringify
                {pane-container
                    {tiled-pane-group
                        max-cols = 1,
                        {tabbed-pane-group
                            {single-pane pane-name = "pane1"},
                            {single-pane pane-name = "pane2"}},
                        {single-pane pane-name = "pane3"}
                    }
                }},
            || --------------------
            "tabbed",
            {stringify
                {pane-container
                    {tabbed-pane-group
                        {single-pane pane-name = "pane1"},
                        {single-pane pane-name = "pane2"},
                        {single-pane pane-name = "pane3"}
                    }
                }},
            || --------------------
            "compound",
            {stringify
                {pane-container
                    {tiled-pane-group
                        max-rows = 1,
                        {tiled-pane-group
                            max-cols = 1,
                            {single-pane pane-name = "pane1"},
                            {single-pane pane-name = "pane2"},
                            {single-pane pane-name = "pane3"}},
                        {tabbed-pane-group
                            {single-pane pane-name = "tab1"},
                            {single-pane pane-name = "tab2"},
                            {single-pane pane-name = "tab3"}}
                    }
                }}
        }
    def display =
        {Frame width = {add-stretch}, height = {add-stretch}}
    def layout-choices =
        {DropdownList width = 2in,
            {on ValueFinished at c:DropdownList do
                {with-busy-cursor
                    def spec = c.value asa String
                    {unset display.background}
                    {display.clear}
                    {display.add
                        {try
                            def pc = {TestPaneContainer spec}
                            set pc.log? = true
                            pc
                         catch e:Exception do
                            set display.background = "pink"
                            {hcenter {vcenter {bold {value e.message}}}}
                        }}
                }}}
    let k:#String = null
    {for x in layout-specs do
        set k = 
            {if-non-null k then
                {layout-choices.append
                    {ListValueItem label = k, x}}
                null
             else x}}
    || NOTE: ignore any trailing label
    {layout-choices.select-index layout-choices.size - 1}
    {VBox margin = 6px, spacing = 6px,
        {on AttachEvent do
            {after 0s do
                {layout-choices.handle-event {ValueFinished}}}},
        {HBox spacing = 6px,
            layout-choices,
            {CommandButton label = "Test Float",
                {on Action do
                    {type-switch {display.graphical-children.read-one}
                     case pc:PaneContainer do
                        def f = {test-float-pane "pane2", true}
                        {f pc}
                    }}},
            {CommandButton label = "Test Dock",
                {on Action do
                    {type-switch {display.graphical-children.read-one}
                     case pc:PaneContainer do
                        def f = {test-dock-pane "pane1", "right", "pane2"}
                        {f pc}
                    }}},
            {CommandButton label = "Test Hide",
                {on Action do
                    {type-switch {display.graphical-children.read-one}
                     case pc:PaneContainer do
                        def f = {test-hide-pane "pane3"}
                        {f pc}
                    }}},
            {CommandButton label = "Test Show",
                {on Action do
                    {type-switch {display.graphical-children.read-one}
                     case pc:PaneContainer do
                        def f = {test-show-pane "pane3"}
                        {f pc}
                    }}},
            {CommandButton label = "Test Hide Tab",
                {on Action do
                    {type-switch {display.graphical-children.read-one}
                     case pc:PaneContainer do
                        def f = {test-hide-pane "tab2"}
                        {f pc}
                    }}},
            {CommandButton label = "Test Show Tab",
                {on Action do
                    {type-switch {display.graphical-children.read-one}
                     case pc:PaneContainer do
                        def f = {test-show-pane "tab2"}
                        {f pc}
                    }}},
            {Fill}},
        display}
}
