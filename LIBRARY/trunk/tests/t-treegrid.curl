||| Maintained by: mgordon
{curl 7.0 applet}
{applet manifest = "manifest.mcurl",
    {compiler-directives careful? = true}
}

{set-document-properties
    background = "#f0f0f0",
    font-size = 9pt
}
{import * from CURL.LANGUAGE.SOURCE}
{import * from CURL.GUI.STANDARD}
{import * from CURL.GUI.SHAPES}
{import * from CURL.GUI.CHARTS}
{title heading? = false, TreeGrid Test}

{import * from CURL.DATA-ACCESS.BASE}
{import * from COM.CURL.EXT.GUI}
{import * from COM.CURL.EXT.DATA-ACCESS}

|# Sample data:
Created 2009-09-09 15:08:25.658999 -0700
id,pid,ord,expand?,depth,ln,rn,data
1,0,1,true,0,0,0,"Node 1"
2,1,2,true,0,0,0,"Node 2"
3,1,3,true,0,0,0,"Node 3"
4,3,4,true,0,0,0,"Node 4"
5,0,5,true,0,0,0,"Node 5"
6,5,6,true,0,0,0,"Node 6"
7,5,7,true,0,0,0,"Node 7"
8,5,8,true,0,0,0,"Node 8"
9,0,9,true,0,0,0,"Node 9"


Created 2009-09-09 15:08:25.658999 -0700
id,pid,ord,expand?,depth,ln,rn,data
10,0,1,true,0,7,14,A,false
11,0,5,true,0,15,20,B,false
12,0,10,false,0,21,22,D,false
13,0,11,false,0,23,24,E,false
14,0,12,false,0,25,26,F,false
15,0,8,true,0,27,30,C,false
16,15,9,true,1,28,29,C.1,false
17,10,2,false,1,8,9,A.1,false
18,10,3,false,1,10,11,A.2,false
19,10,4,false,1,12,13,A.3,false
20,11,6,false,1,16,17,B.1,false
22,11,7,false,1,18,19,B.3,false
#|

|| -------------------------------------------------------------------------

{define-proc {make-sample-data ...:EventHandler}:RecordSetTreeModel
    {let sample:RecordSetTreeModel =
        {RecordSetTreeModel.from-Url
            {url "data/t-treegrid.csv"},
            {RecordFields
                {splice RecordSetTreeModel.tree-fields},
                {RecordField "data", domain = String}
            },
            {splice ...}
        }
    }
    {return sample}
}

{let tree-model:RecordSetTreeModel = 
    {make-sample-data}
}

{let tree-grid:RecordGrid = 
    {TreeGrid
||--        font-size = 12pt,
        tree-model,
        name = "tree-grid",
        width = 6.5in,
        height = 3in,
        display-navigation-panel? = false,
        display-filler-column? = true,
        background = "#eeeeee",
        sort = "ord", || ord
        key-spec = "ord", || id
        alternate-row-background="#f0f0f0",
        automatic-columns? = false,
        {RecordGridColumn  width=24pt, "id"},
        {RecordGridColumn  width=24pt, "pid"},
        {RecordGridColumn  width=3.75in, "data", 
            cell-spec = ExpanderCell, valign = "top"},
        {RecordGridColumn  width=18pt, "expand?"},
        {RecordGridColumn  width=24pt, "ord"},
        {RecordGridColumn  width=18pt, "depth"},
        {RecordGridColumn  width=18pt, "ln"},
        {RecordGridColumn  width=18pt, "rn"},
        {RecordGridColumn  width=18pt, "hide"}
    }
}

{HBox 
    valign = "top",
    tree-grid,
    {VBox spacing = 6pt,
        hstretch? = true,
        {CommandButton
            takes-focus? = false,
            width = standard-button-width,
            label = "Add Node",
            bound-command = {tree-grid.get-command "Tree.add-node"} ||""
        },
        {CommandButton
            takes-focus? = false,
            width = standard-button-width,
            label = "Add Child",
            bound-command = {tree-grid.get-command "Tree.add-child-node"} ||""
        },
        {CommandButton
            takes-focus? = false,
            width = standard-button-width,
            label = "Move Up",
            bound-command = {tree-grid.get-command "Tree.move-node-up"} ||""
        },
        {CommandButton
            takes-focus? = false,
            width = standard-button-width,
            label = "Move Down",
            bound-command = {tree-grid.get-command "Tree.move-node-down"} ||""
        },
        {CommandButton
            takes-focus? = false,
            width = standard-button-width,
            label = "Delete",
            bound-command = {tree-grid.get-command "Tree.delete-node"} ||""
        },
        {CommandButton
            takes-focus? = false,
            width = standard-button-width,
            label = "Indent",
            bound-command = {tree-grid.get-command "Tree.indent-node"} ||""
        },
        {CommandButton
            takes-focus? = false,
            width = standard-button-width,
            label = "Unindent",
            bound-command = {tree-grid.get-command "Tree.unindent-node"} ||""
        },
        {CommandButton
            takes-focus? = false,
            width = standard-button-width,
            label = "Save",
            bound-command = {tree-grid.get-command "Tree.save"} ||""
        },
        {Fill}
    }
}

|| -------------------------------------------------------------------------

||--This shows a simple TreeGrid backed by a CSV file. The first two
||--columns encode the tree hierarchy. The id field is a unique {italic
||--id} for each record.  The {italic pid} field means that the specified
||--id is the parent of this record.
||--
||--The {italic data} column is the data associated with each node.  It
||--uses an {monospace ExpanderCell} to provide the marker at the
||--left. You can move nodes around by dragging the marker.  When a node
||--has children, the marker is a triangle that can be used to hide or
||--show the children.
||--
||--The last 6 columns are maintained by the TreeModel and are not
||--normally displayed. Here is another {monospace TreeGrid} showing the
||--same data {monospace RecordSetTreeModel}, but without the extra
||--columns.

|| -------------------------------------------------------------------------

{def pm =
    {Pixmap.from-url
        {url "resources/folder-new.gif"}}
}

{TreeGrid
    tree-model,
    width = 4.5in,
    height = 3in,
    display-navigation-panel? = false,
    display-filler-column? = true,
    background = "#eeeeee",
    sort = "ord", || ord
    key-spec = "ord", || id
    alternate-row-background="#f0f0f0",
    icon-proc =
        {proc {cell:RecordGridCell, state:DisclosureState}:Pixmap
            {return pm}
        },
    item-proc =
        {proc {discloser:RecordGridCell}:Graphic
            {return {bold TBD!}}
        },
    automatic-columns? = false,
    {RecordGridColumn  width=3.75in, "data", 
||--        cell-spec = ExpanderCell, valign = "top"
        cell-spec = ExpanderCell, valign = "top"
    }
}

Here is a complete applet that uses a TreeGrid to make a 
{link target = "tree", href = 
||--    {url "../code/docs/sample-tree.curl"}, 
    {url "sample-tree.curl"}, 
hierarchal To Do list}.

{bold Known Issues}
{itemize
    {item Review the API}
    {item Write complete doc strings}
    {item Test and Fix}
}
