||| Maintained by: mgordon

{curl 7.0 applet}
{curl-file-attributes character-encoding = "windows-latin-1"}
{applet
    manifest = "manifest.mcurl",
    {compiler-directives careful? = true}
}
{set-document-properties
    font-size = 10pt
}

{import * from COM.CURL.EXT.GUI}
{import * from CURL.GRAPHICS.WINDOW}
{import * from COM.CURL.EXT.DATA-ACCESS}

Here are some domains.

{def table:Table =
    {Table
        columns = 6,
        "Name", "Entry", "Value", "Type", "Formatted", "Error"
    }
}

{define-proc public {make-domain-test
                        t:Table, name:String, domain:Domain, e:String
                    }:void

    {t.add name}
    let v:any = null
    let message:String = ""
    def v-frame = {Frame width = 60pt}
    def vt-frame = {Frame width = 60pt}
    def f-frame = {Frame width = 60pt}
    def msg-frame = {Frame width = 2.5in}
    def ctl =
        {TextField
            width = 1in,
            {on ValueChanged at tf:TextField do
                {f-frame.clear}
                {try
                    set v = {domain.parse tf.value}
                    set message = ""
                    {f-frame.add replace? = true, {domain.format v}}
                 catch e:Exception do
                    set message = e.message
                }
                {v-frame.add replace? = true, v}
                {vt-frame.add replace? = true, {type-of v}.name}
                {msg-frame.add replace? = true, message}
            }


        }
    {ctl.set-value-with-events e}
    {t.add ctl}
    {t.add v-frame}
    {t.add vt-frame}
    {t.add f-frame}
    {t.add msg-frame}
}

{make-domain-test table, "DurationDomain", {DurationDomain}, "3s"}
{make-domain-test table, "DurationDomain", {DurationDomain}, "3.45d"}
{make-domain-test table, "DurationDomain", {DurationDomain}, "04:56"}

{make-domain-test table, "StandardTimeDomain", {StandardTimeDomain}, "3s"}
{make-domain-test table, "StandardTimeDomain", {StandardTimeDomain}, "3.45d"}
{make-domain-test table, "StandardTimeDomain", {StandardTimeDomain}, "04:56"}

{make-domain-test table, "double-domain", double-domain, "1.2345678"}
{make-domain-test table, "double-domain", double-domain, "9999999.2345678"}
{make-domain-test table, "double-domain", double-domain, "0.0345678"}

{make-domain-test table, "d2-domain", d2-domain, "1.2345678"}
{make-domain-test table, "d2-domain", d2-domain, "9999999.2345678"}
{make-domain-test table, "d2-domain", d2-domain, "0.0345678"}

{let public constant d2a-domain:DoubleDomain = {DoubleDomain precision = 2}}
{make-domain-test table, "d2a-domain", d2a-domain, "1.2345678"}
{make-domain-test table, "d2a-domain", d2a-domain, "9999999.2345678"}
{make-domain-test table, "d2a-domain", d2a-domain, "0.0345678"}

{make-domain-test table, "d3-domain", d3-domain, "1.2345678"}
{make-domain-test table, "d3-domain", d3-domain, "9999999.2345678"}
{make-domain-test table, "d3-domain", d3-domain, "0.0345678"}

{make-domain-test table, "d4-domain", d4-domain, "1.2345678"}
{make-domain-test table, "d4-domain", d4-domain, "9999999.2345678"}
{make-domain-test table, "d4-domain", d4-domain, "0.0345678"}




{value table}
