{define-class public abstract BasePane {inherits Frame}
  field package percent:double   ||negative means don't care
  field package pane-group:#PaneGroup
  field package _root-container:#PaneContainer
  field public removable?:bool = false

  {constructor public {default ...}
    {construct-super ...}
  }

  {getter public {root-container}:#PaneContainer
    {return self._root-container}
  }

  {setter public {root-container pc:#PaneContainer}:void
    set self._root-container = pc
  }

  {method package {compute-percentage}:(PaneGroup, double)
    let parent:PaneGroup = {get-parent-pane-group self}
    let percent:double = {parent.get-percent self}
    {return parent, percent}
  }

  {method public {get-stretchiness}:double
|| TODO: Is this still necessary?
|| TODO: Implement the methods that used to come with PanedWindow

|| NOTE: From {Pane.get-stretchiness}
|| Return the stretchiness of the height or width allowed by a vertical or horizontal pane, respectively.
||
|| Returns
||
|| The stretchiness of the Pane, a floating point value between 0 and 1. The stretchiness indicates the percentage of the total height or width occupied by the Pane in the parent PanedWindow if the PanedWindow has a vertical or horizontal orientation respectively.
    {return 1.0}
  }

  {method package abstract {save-state out:TextOutputStream}:void}
}
