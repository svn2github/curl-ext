{curl 7.0, 8.0 applet}
{curl-file-attributes character-encoding = "windows-latin-1"}
{applet 
    manifest = "manifest.mcurl",
    {compiler-directives careful? = true}
}

{import * from COM.CURL.EXT.GUI}

{define-proc {make-samples}:Graphic
    let balloon:#BalloonView = null

    {let cc:CalendarControl =
        {CalendarControl
            width = 6in,
            height = 4.5in,
            vorigin = "top", horigin = "left",
            value = {DateTime},
            show-date-controls? = false,
            {on e:PointerRelease do
                let content:Dialog = {Dialog background = "white"}
                {content.add
                    {spaced-vbox
                        {spaced-hbox "Date:", cc.value.info.iso-date},
                        {bold Add notes},
                        {TextArea
                            width = 1in,
                            height = 1in
                        }
                    }
                }
                {set balloon =
                    {BalloonView
                        content,
                        cc,
                        title = "Daily Notes:",
                        e.x, e.y,
                        tail-size = 9pt,
                        max-width = 5in,
                        corner-radius = 9pt
                    }
                }
            }
        }
    }

    let ui:VBox =
        {VBox
            spacing = 4pt, margin = 4pt,
            cc,
            {HBox spacing = 6pt,
                {CommandButton
                    label = "Add Content",
                    {on Action do
                        {if-non-null balloon then
                            def c = {TextArea width = 2in, height = 1in}
                            set balloon.title = "Added contents"
                            {balloon.add c, replace? = true}
                            set balloon.title = "Added New Content"
                        }
                    }
                },
                {CommandButton
                    label = "Clear Popup",
                    {on Action do
                        {if-non-null balloon then
                            {balloon.clear}
                            set balloon.title = "Cleared contents"
                        }
                    }
                },
                {CommandButton
                    label = "Hide for 2 sec.",
                    {on Action do
                        {if-non-null balloon then
                            {balloon.hide}
                            {after 2s do
                                {balloon.show}
                            }
                        }
                    }
                },
                {CommandButton
                    label = "Move",
                    {on Action do
                        {if-non-null balloon then
                            {balloon.set-pointer-position 0in, 0in}
||--                0.0681465m, 0.0269503m}
                        }
                    }
                }
            }
        }
    {return ui}
}

{View
    || Replace {Frame} with your code.
    {make-samples},
    visibility = "normal", 
    {on WindowClose do
        {exit}
    }
}
